{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","getPokemon","a","fetch","state","query","toLowerCase","res","json","data","console","log","setState","pokemon","err","handleChange","e","target","value","handleSubmit","preventDefault","this","className","onSubmit","type","onChange","src","id","alt","name","base_experience","weight","abilities","map","abil","ability","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAe,I,YCMMA,E,kDAEnB,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAcRC,WAfkB,sBAeL,8BAAAC,EAAA,+EAGSC,MAAM,qCAAD,OAAsC,EAAKC,MAAMC,MAAMC,gBAHrE,cAGHC,EAHG,gBAIUA,EAAIC,OAJd,OAIHC,EAJG,OAKTC,QAAQC,IAAIF,GAEZ,EAAKG,SAAS,CACZC,QAASJ,EACTK,IAAK,OATE,kDAcT,EAAKF,SAAS,CACZC,QAAS,KACTC,IAAG,OAGLJ,QAAQC,IAAR,MAnBS,0DAfK,EAuClBI,aAAe,SAAAC,GACb,EAAKJ,SAAS,CAAEP,MAAOW,EAAEC,OAAOC,SAxChB,EA2ClBC,aAAe,SAAAH,GACbA,EAAEI,iBACF,EAAKnB,WAAWe,EAAEC,OAAOC,QA1CzB,EAAKd,MAAQ,CACXC,MAAO,QACPQ,QAAS,GACTC,IAAI,IANU,E,qDAWlB,WACEO,KAAKpB,WAAWoB,KAAKjB,MAAMC,S,oBAoC7B,WAEE,MAA2BgB,KAAKjB,MAArBS,GAAX,EAAIR,MAAJ,EAAWQ,SAASC,EAApB,EAAoBA,IAKpB,OAJAJ,QAAQC,IAAIU,KAAKjB,MAAMC,OAKrB,mCACA,sBAAKiB,UAAU,WAAf,UACE,uBAAMC,SAAUF,KAAKF,aAArB,UACE,gDACA,uBAAOK,KAAK,OAAOC,SAAUJ,KAAKN,aAAcG,MAAOG,KAAKjB,MAAMC,QAClE,uBAAOmB,KAAK,SAASN,MAAM,cAI5BL,IAAYC,EACX,sBAAKQ,UAAU,cAAf,UACA,qBAAKI,IAAG,wDAAmDb,EAAQc,GAA3D,QAAqEC,IAAKP,KAAKjB,MAAMS,QAAQgB,OACrG,oBAAIP,UAAU,qBAAd,SAAoCT,EAAQgB,OAC5C,+BACE,oDAAuBhB,EAAQiB,mBAC/B,2CAAcjB,EAAQkB,UACrBlB,EAAQmB,UAAUC,KAAI,SAACC,GAAD,OACrB,6BACGA,EAAKC,QAAQN,gBAOpB,sBAAKP,UAAU,QAAf,UACA,qBAAKA,UAAU,YAAYI,IAAI,+EAA+EE,IAAI,KAClH,kF,GArFuBQ,aCMlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f487dcf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: \"eevee\",\r\n      pokemon: \"\",\r\n      err:\"\"\r\n    }\r\n  }\r\n\r\n  // componentDidMount render เสร็จ หลัง render จะไปเรียกใช้ ฟังชั้น getPokemon\r\n  componentDidMount(){\r\n    this.getPokemon(this.state.query);\r\n  }\r\n\r\n  getPokemon = async () =>{\r\n    try{\r\n\r\n      const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${this.state.query.toLowerCase()}`);\r\n      const data = await res.json();\r\n      console.log(data);\r\n\r\n      this.setState({\r\n        pokemon: data,\r\n        err: null\r\n      })\r\n\r\n\r\n    } catch (err){\r\n      this.setState({\r\n        pokemon: null,\r\n        err\r\n      })\r\n\r\n      console.log(err)\r\n\r\n    }\r\n  }\r\n\r\n  handleChange = e =>{\r\n    this.setState({ query: e.target.value})\r\n  }\r\n  \r\n  handleSubmit = e =>{\r\n    e.preventDefault();\r\n    this.getPokemon(e.target.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    let{query, pokemon, err} = this.state;\r\n    console.log(this.state.query);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n      <div className=\"main-div\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h3>Search Pokemon</h3>\r\n          <input type=\"text\" onChange={this.handleChange} value={this.state.query}/>\r\n          <input type=\"submit\" value=\"Search\"/>\r\n        </form>\r\n\r\n        {/* ถ้ามีข้อมูล เเละ ไม่มี err */}\r\n        {pokemon && !err ?(\r\n          <div className=\"pokemon-pic\">\r\n          <img src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`} alt={this.state.pokemon.name}/>\r\n          <h2 className=\"pokemon-name-title\">{pokemon.name}</h2>\r\n          <ul>\r\n            <li>Base experience : {pokemon.base_experience}</li>\r\n            <li>Weight : {pokemon.weight}</li>\r\n            {pokemon.abilities.map((abil) =>(\r\n              <li>\r\n                {abil.ability.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        ): (\r\n          <div className=\"error\">\r\n          <img className=\"img-error\" src=\"https://i.pinimg.com/originals/13/9a/19/139a190b930b8efdecfdd5445cae7754.png\" alt=\"\"/>\r\n          <h2>Whoops ! Couldn't find that Pokemon!</h2>\r\n        </div>\r\n        )}\r\n        \r\n\r\n        \r\n     \r\n      </div>\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}